现在我要测试一个新场景，主机一边接收来自一个设备（eeg）数据（过程与test_sync.py中单设备的线程一致），一边同时向刺激器和外骨骼写入数据，10Hz写入，每次写入8字节数据。
接收数据和发射数据独立，不考虑数据的处理过程。
因此，新的测试脚本也是连接三个设备，三个线程。刺激器和外骨骼的蓝牙地址分别是EE:EE:EE:EE:EE:04和EE:EE:EE:EE:EE:05，特征uuid不变。
确认都连接之后，一个线程才向eeg设备发送start，另两个线程分别向刺激器和外骨骼写数据（数据8字节 内容随意）
设备向下位机以10Hz写数据的操作也是封装起来的，这样的话，当我同时写入两个设备的情况失败时，我还可以测试只写入一个设备。
请以test_sync.py为参考，创建新的代码文件test_write.py，实现上述测试场景，并且为代码添加必要的注释

1.主机test_write.py向刺激器和外骨骼发送的16字节的数据不再随意，最好要承载微秒级别的时间戳（以第一次发送前的主机时间为基准）。在10秒的测试时长结束后读取它们的read特征值，将2字节的值解析为整数并打印。
2.你已经为我完成了test_write.py，我们需要烧录新的硬件代码才能调试。因此，参考main.c的代码，编写新的main_write.c文件，作为刺激器和外骨骼要烧录的代码，设备名和地址就按照刺激器的来，我会在烧录之前自行调整。
在main_write.c中，在被连接或被第一次写入数据时记录时间戳作为基准。在每次在write特征值接收到16字节的数据包后，解析时间戳信息，并与自己当前的时间戳做差，使用printf()打印结果；并统计接收到的包的数量，并更新到read特征值。

根据以上要求修改test_write.py，创建main_write.c文件，添加必要的代码注释。
